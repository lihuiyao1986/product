<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hundsun.fund.product.dao.mapper.UserMapper">

	<!-- *********************用户信息 begin*********************** -->
	<!-- 用户信息 -->
	<resultMap type="UserInfoDaoModel" id="UserInfoMap">
		<!-- column:库表的字段名 property:实体类里的属性名 -->
		<id column="f_investor_id" property="id" />
		<result column="f_investor_uuid" property="uuid" />
		<result column="f_investor_icon" property="icon" />
		<result column="f_investor_name" property="name" />
		<result column="f_investor_email" property="email" />
		<result column="f_investor_qq" property="qq" />
		<result column="f_investor_webchat" property="webchat" />
		<result column="f_investor_mobile" property="mobile" />
		<result column="f_investor_address" property="address" />
		<result column="f_investor_account" property="account" />
		<result column="f_investor_pwd" property="pwd" />
		<result column="f_investor_memo" property="memo" />
	</resultMap>

	<!-- 用户信息查询字段 -->
	<sql id="Base_UserInfo_Column_List">
		f_investor_id,f_investor_uuid,f_investor_icon,
		f_investor_name,f_investor_email, f_investor_qq,
		f_investor_webchat,f_investor_mobile,f_investor_address,
		f_investor_account,f_investor_pwd,f_investor_memo
	</sql>

	<!-- 保存用户信息的字段 -->
	<sql id="Base_Insert_UserInfo_Column_List">
		f_investor_uuid,f_investor_icon, f_investor_name,
		f_investor_email, f_investor_qq, f_investor_webchat,
		f_investor_mobile,f_investor_address,f_investor_account,
		f_investor_pwd,f_investor_memo
	</sql>

	<!-- 修改用户信息set对应的sql -->
	<sql id="Update_User_Info_Set_Sql">
		<set>
			<if test="icon!=null and icon!=''">
				f_investor_icon = #{icon,jdbcType=VARCHAR},
			</if>
			<if test="name!=null and name!=''">
				f_investor_name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="email!=null and email!=''">
				f_investor_email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="qq!=null and qq!=''">
				f_investor_qq = #{qq,jdbcType=VARCHAR},
			</if>
			<if test="webchat!=null and webchat!=''">
				f_investor_webchat = #{webchat,jdbcType=VARCHAR},
			</if>
			<if test="mobile!=null and mobile!=''">
				f_investor_mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="address!=null and address!=''">
				f_investor_address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="account!=null and account!=''">
				f_investor_account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="pwd!=null and pwd!=''">
				f_investor_pwd = #{pwd,jdbcType=VARCHAR},
			</if>
			<if test="memo!=null and memo!=''">
				f_investor_memo = #{memo,jdbcType=VARCHAR},
			</if>
		</set>
	</sql>

	<!-- 用户登录 -->
	<select id="login" resultMap="UserInfoMap" parameterType="String">
		select
		<include refid="Base_UserInfo_Column_List" />
		from t_investor where f_investor_account = #{account,jdbcType=VARCHAR}
		and f_investor_pwd = #{pwd,jdbcType=VARCHAR}
	</select>

	<!-- 根据uuid查询用户信息 -->
	<select id="queryUserInfoByUUID" parameterType="String"
		resultMap="UserInfoMap">
		select
		<include refid="Base_UserInfo_Column_List" />
		from t_investor where f_investor_uuid = #{uuid,jdbcType=VARCHAR}
	</select>

	<!-- 保存用户的信息 -->
	<insert id="saveUserInfo" parameterType="UserInfoDaoModel">
		insert into t_investor
		(
		<include refid="Base_Insert_UserInfo_Column_List" />
		)
		values
		(
		#{uuid,jdbcType=VARCHAR},
		#{icon,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{qq,jdbcType=VARCHAR},
		#{webchat,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR},
		#{account,jdbcType=VARCHAR},
		#{pwd,jdbcType=VARCHAR},
		#{memo,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 根据uuid更新用户信息 -->
	<update id="modifyUserInfoByUUID" parameterType="UserInfoDaoModel">
		update t_investor
		<include refid="Update_User_Info_Set_Sql" />
		where f_investor_uuid = #{uuid,jdbcType=VARCHAR}
	</update>
	<!-- *********************用户信息 end*********************** -->

	<!-- *********************用户终端信息 begin*********************** -->
	<!-- 用户的设备信息 -->
	<resultMap type="UserDeviceInfoDaoModel" id="UserDeviceInfoMap">
		<id column="f_investor_mobile_info_id" property="id" />
		<result column="f_investor_id" property="userId" />
		<result column="f_sys_name" property="sysname" />
		<result column="f_sys_version" property="sysversion" />
		<result column="f_app_version" property="appversion" />
		<result column="f_app_version_name" property="appversionname" />
		<result column="f_device_info" property="deviceInfo" />
		<result column="f_screen_height" property="screenHeight" />
		<result column="f_screen_width" property="screenWidth" />
		<result column="f_mobile_uuid" property="uuid" />
		<result column="f_net_type" property="nettype" />
		<result column="f_device_density" property="density" />
		<result column="f_memo" property="memo" />
	</resultMap>
	<!-- 用户设备信息查询字段 -->
	<sql id="Base_UserDeviceInfo_Column_List">
		f_investor_mobile_info_id,f_investor_id,
		f_sys_name,f_sys_version,f_app_version,
		f_app_version_name,f_device_info,
		f_screen_height,f_screen_width,f_mobile_uuid,
		f_net_type,f_device_density,f_memo
	</sql>

	<!-- 保存用户设备信息的字段 -->
	<sql id="Base_Insert_UserDeviceInfo_Column_List">
		f_investor_id,f_sys_name,f_sys_version,
		f_app_version,f_app_version_name,
		f_device_info,f_screen_height,
		f_screen_width,f_mobile_uuid,
		f_net_type,f_device_density,f_memo
	</sql>
	<!-- 更新设备信息的set sql -->
	<sql id="Update_User_Device_Info_Set_Sql">
		<set>
			<if test="sysname!=null and sysname!=''">
				f_sys_name = #{sysname,jdbcType=VARCHAR},
			</if>
			<if test="sysversion!=null and sysversion!=''">
				f_sys_version = #{sysversion,jdbcType=VARCHAR},
			</if>
			<if test="appversion!=null and appversion!=''">
				f_app_version = #{appversion,jdbcType=VARCHAR},
			</if>
			<if test="appversionname!=null and appversionname!=''">
				f_app_version_name = #{appversionname,jdbcType=VARCHAR},
			</if>
			<if test="deviceInfo!=null and deviceInfo!=''">
				f_device_info = #{deviceInfo,jdbcType=VARCHAR},
			</if>
			<if test="screenHeight!=null and screenHeight!=''">
				f_screen_height = #{screenHeight,jdbcType=VARCHAR},
			</if>
			<if test="screenWidth!=null and screenWidth=''">
				f_screen_width = #{screenWidth,jdbcType=VARCHAR},
			</if>
			<if test="uuid!=null and uuid=''">
				f_mobile_uuid = #{uuid,jdbcType=VARCHAR},
			</if>
			<if test="nettype!=null and nettype!=''">
				f_net_type = #{nettype,jdbcType=VARCHAR},
			</if>
			<if test="density!=null and density!=''">
				f_device_density = #{density,jdbcType=VARCHAR},
			</if>
			<if test="memo!=null and memo!=''">
				f_memo = #{memo,jdbcType=VARCHAR},
			</if>
		</set>
	</sql>
	<!-- 根据用户id查询设备信息 -->
	<select id="queryDeviceInfoByUserId" resultMap="UserDeviceInfoMap"
		parameterType="String">
		select
		<include refid="Base_UserDeviceInfo_Column_List" />
		from t_investor_device_info where f_investor_id =
		#{userId,jdbcType=BIGINT}
	</select>

	<!-- 保存用户的设备信息 -->
	<insert id="saveUserDeviceInfo" parameterType="UserDeviceInfoDaoModel">
		insert into t_investor_device_info
		(
		<include refid="Base_Insert_UserDeviceInfo_Column_List" />
		)
		values(
		#{userId,jdbcType=BIGINT},
		#{sysname,jdbcType=VARCHAR},
		#{sysversion,jdbcType=VARCHAR},
		#{appversion,jdbcType=VARCHAR},
		#{appversionname,jdbcType=VARCHAR},
		#{deviceInfo,jdbcType=VARCHAR},
		#{screenHeight,jdbcType=VARCHAR},
		#{screenWidth,jdbcType=VARCHAR},
		#{uuid,jdbcType=VARCHAR},
		#{nettype,jdbcType=VARCHAR},
		#{density,jdbcType=VARCHAR},
		#{memo,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 更新用户的设备信息 -->
	<update id="updateUserDeviceInfo" parameterType="UserDeviceInfoDaoModel">
		update t_investor_device_info
		<include refid="Update_User_Device_Info_Set_Sql" />
		where f_investor_mobile_info_id = #{id} and f_investor_id = #{userId}
	</update>

	<!-- *********************用户终端信息 end*********************** -->

	<!-- *********************用户登录信息 begin*********************** -->
	<!-- 用户的登录信息 -->
	<resultMap type="UserLoginInfoDaoModel" id="UserLoginInfoMap">
		<id column="f_investor_logininfo_id" property="id" />
		<result column="f_investor_id" property="userId" />
		<result column="f_last_login_time" property="lastLoginTime"
			javaType="java.util.Date" jdbcType="TIMESTAMP" />
		<result column="f_login_time" property="loginTime" javaType="java.util.Date"
			jdbcType="TIMESTAMP" />
		<result column="f_login_nums" property="loginNums" />
		<result column="f_memo" property="memo" />
	</resultMap>
	<!-- 保存用户登录信息的字段 -->
	<sql id="Base_Insert_UserLoginInfo_Column_List">
		f_investor_id,
		f_last_login_time,
		f_login_time,
		f_login_nums,
		f_memo
	</sql>

	<!-- 查询用户登录信息的字段 -->
	<sql id="Base_UserLoginInfo_Column_List">
		f_investor_logininfo_id,
		f_investor_id,
		f_last_login_time,
		f_login_time,
		f_login_nums,
		f_memo
	</sql>

	<!-- 更新用户登录信息的set sql -->
	<sql id="Update_User_Login_Info_Set_Sql">
		<set>
			<if test="lastLoginTime!=null">
				f_last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginTime!=null">
				f_login_time = #{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="loginNums!=null and loginNums!=''">
				f_login_nums = #{loginNums,jdbcType=BIGINT},
			</if>
			<if test="memo!=null and memo!=''">
				f_memo = #{memo,jdbcType=VARCHAR},
			</if>
		</set>
	</sql>

	<!-- 根据用户ID查询用户的登录信息 -->
	<select id="queryUserLoginInfoByUserId" parameterType="String"
		resultMap="UserLoginInfoMap">
		select
		<include refid="Base_UserLoginInfo_Column_List" />
		from t_investor_logininfo where f_investor_id =
		#{userId,jdbcType=BIGINT}
	</select>

	<!-- 保存用户的登录信息 -->
	<insert id="saveUserLoginInfo" parameterType="UserLoginInfoDaoModel">
		insert into t_investor_logininfo
		(
		<include refid="Base_Insert_UserLoginInfo_Column_List" />
		)
		values(
		#{userId,jdbcType=BIGINT},
		#{lastLoginTime,jdbcType=TIMESTAMP},
		#{loginTime,jdbcType=TIMESTAMP},
		#{loginNums,jdbcType=BIGINT},
		#{memo,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 更新用户的登录信息 -->
	<update id="updateUserLoginInfo" parameterType="UserLoginInfoDaoModel">
		update t_investor_logininfo
		<include refid="Update_User_Login_Info_Set_Sql" />
		where f_investor_logininfo_id = #{id} and f_investor_id = #{userId}
	</update>

	<!-- *********************用户登录信息 end*********************** -->

	<!-- *********************用户爱好 begin*********************** -->
	<!-- 用户的爱好信息 -->
	<resultMap type="UserHobbyDaoModel" id="UserHobbyMap">
		<id column="f_hobby_id" property="id" />
		<result column="f_investor_id" property="userId" />
		<result column="f_product_asset" property="assest" />
		<result column="f_product_year_income_rate" property="yearIncomeRate" />
		<result column="f_product_limit" property="limit" />
		<result column="f_risk_ability" property="riskAbility" />
		<result column="f_memo" property="memo" />
	</resultMap>

	<!-- 查询用户爱好的字段 -->
	<sql id="Base_UserHobby_Column_List">
		f_hobby_id,f_investor_id,f_product_asset,
		f_product_year_income_rate,f_product_limit,
		f_risk_ability,f_memo
	</sql>

	<!-- 保存用户爱好的字段 -->
	<sql id="Base_Insert_UserHobby_Column_List">
		f_investor_id,f_product_asset,
		f_product_year_income_rate,f_product_limit,
		f_risk_ability,f_memo
	</sql>

	<!-- 更新用户的爱好信息的sql -->
	<sql id="Update_User_Hobby_Set_Sql">
		<set>
			<if test="assest!=null and assest!=''">
				f_product_asset = #{assest,jdbcType=DOUBLE},
			</if>
			<if test="yearIncomeRate!=null and yearIncomeRate!=''">
				f_product_year_income_rate =
				#{yearIncomeRate,jdbcType=DOUBLE},
			</if>
			<if test="limit!=null and limit!=''">
				f_product_limit = #{limit,jdbcType=BIGINT},
			</if>
			<if test="riskAbility!=null and riskAbility!=''">
				f_risk_ability = #{riskAbility,jdbcType=VARCHAR},
			</if>
			<if test="memo!=null and memo!=''">
				f_memo = #{memo,jdbcType=VARCHAR},
			</if>
		</set>
	</sql>

	<!-- 根据用户ID查询用户的爱好信息 -->
	<select id="queryUserHobbyByUserId" resultMap="UserHobbyMap"
		parameterType="String">
		select
		<include refid="Base_UserHobby_Column_List" />
		from t_investor_hobby where f_investor_id = #{userId}
	</select>

	<!-- 保存用户的爱好信息 -->
	<insert id="saveUserHobbyInfo" parameterType="UserHobbyDaoModel">
		insert into t_investor_hobby
		(
		<include refid="Base_Insert_UserHobby_Column_List" />
		)
		values(
		#{userId,jdbcType=BIGINT},
		#{assest,jdbcType=DOUBLE},
		#{yearIncomeRate,jdbcType=DOUBLE},
		#{limit,jdbcType=BIGINT},
		#{riskAbility,jdbcType=VARCHAR},
		#{memo,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 更新用户的爱好信息 -->
	<update id="updateUserHobbyInfo" parameterType="UserHobbyDaoModel">
		update t_investor_hobby
		<include refid="Update_User_Hobby_Set_Sql" />
		where f_hobby_id = #{id} and f_investor_id = #{userId}
	</update>
	<!-- *********************用户爱好 end*********************** -->

	<!-- *********************用户反馈信息 begin*********************** -->
	<!-- 用户反馈信息 -->
	<resultMap type="UserFeedBackInfoDaoModel" id="userFeedbackInfoMap">
		<id column="f_investor_feedback_id" property="id" />
		<result column="f_investor_feedback_info" property="feedbackInfo"
			jdbcType="CLOB" />
		<result column="f_investor_id" property="userId" />
		<result column="f_investor_feedback_time" property="feedbackTime"
			javaType="java.util.Date" jdbcType="TIMESTAMP" />
		<result column="f_investor_feedback_email" property="email" />
		<result column="f_investor_feedback_mobile" property="mobile" />
		<result column="f_investor_feedback_memo" property="memo" />
	</resultMap>

	<!-- 查询用户反馈信息字段 -->
	<sql id="Base_UserFeedback_Column_List">
		f_investor_feedback_id,f_investor_feedback_info,
		f_investor_id,f_investor_feedback_time,
		f_investor_feedback_email,f_investor_feedback_mobile,
		f_investor_feedback_memo
	</sql>

	<!-- 保存用户的反馈信息的sql -->
	<sql id="Base_Insert_UserFeedbackInfo_Column_List">
		f_investor_feedback_info,f_investor_id,
		f_investor_feedback_time,f_investor_feedback_email,
		f_investor_feedback_mobile,f_investor_feedback_memo
	</sql>

	<!-- 更新用户的反馈信息的sql -->
	<sql id="Update_User_Feedback_Set_Sql">
		<set>
			<if test="feedbackInfo!=null and feedbackInfo!=''">
				f_investor_feedback_info = #{assest,jdbcType=CLOB},
			</if>
			<if test="feedbackTime!=null">
				f_investor_feedback_time =
				#{feedbackTime,jdbcType=TIMESTAMP},
			</if>
			<if test="email!=null and email!=''">
				f_investor_feedback_email =
				#{riskAbility,jdbcType=VARCHAR},
			</if>
			<if test="mobile!=null and mobile!=''">
				f_investor_feedback_mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="memo!=null and memo!=''">
				f_investor_feedback_memo = #{memo,jdbcType=VARCHAR},
			</if>
		</set>
	</sql>

	<!-- 保存用户的反馈信息 -->
	<insert id="saveUserFeedbackInfo" parameterType="UserFeedBackInfoDaoModel">
		insert into t_investor_feedback_info
		(
		<include refid="Base_Insert_UserFeedbackInfo_Column_List" />
		)
		values
		(
		#{feedbackInfo,jdbcType=CLOB},
		#{userId,jdbcType=BIGINT},
		#{feedbackTime,jdbcType=TIMESTAMP},
		#{email,jdbcType=VARCHAR},
		#{mobile,jdbcType=VARCHAR},
		#{memo,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 根据用户id查询用户的反馈信息 -->
	<select id="queryUserFeedbackInfoListByUserId" parameterType="String"
		resultMap="userFeedbackInfoMap">
		select
		<include refid="Base_UserFeedback_Column_List" />
		from t_investor_feedback_info where f_investor_id =
		#{userId,jdbcType=BIGINT}
		<if test="feedbackId!=null and feedbackId!=''">
			and f_investor_feedback_id = #{feedbackId,jdbcType=BIGINT}
		</if>
	</select>
	<!-- *********************用户反馈信息 end*********************** -->

	<!-- *********************用户反馈回复信息 begin*********************** -->
	<!-- 用户的反馈回复信息resultMap -->
	<resultMap type="UserFeenbackReplyDaoModel" id="UserFeedbackReplyMap">
		<id column="f_feedback_reply_id" property="id" />
		<result column="f_feedback_reply_content" property="content"
			jdbcType="CLOB" />
		<result column="f_investor_feedback_id" property="feedbackId" />
		<result column="f_feedback_reply_time" property="replyTime"
			javaType="java.util.Date" jdbcType="TIMESTAMP" />
		<result column="f_feedback_reply_autor" property="replyAuthor" />
		<result column="f_feedback_reply_memo" property="memo" />
	</resultMap>

	<!-- 查询回复信息的字段 -->
	<sql id="Base_UserFeedbackReply_Column_List">
		f_feedback_reply_id,f_feedback_reply_content,
		f_investor_feedback_id,f_feedback_reply_time,
		f_feedback_reply_autor,f_feedback_reply_memo
	</sql>

	<!-- 保存回复信息的字段 -->
	<sql id="Base_Insert_UserFeedbackReplyInfo_Column_List">
		f_feedback_reply_content,f_investor_feedback_id,
		f_feedback_reply_time,f_feedback_reply_autor,
		f_feedback_reply_memo
	</sql>

	<!-- 保存用户的反馈回复信息 -->
	<insert id="saveUserFeedbackReplyInfo" parameterType="UserFeenbackReplyDaoModel">
		insert into t_feedback_reply
		(
		<include refid="Base_Insert_UserFeedbackReplyInfo_Column_List" />
		)
		values
		(
		#{content,jdbcType=CLOB},
		#{feedbackId,jdbcType=BIGINT},
		#{replyTime,jdbcType=VARCHAR},
		#{replyAuthor,jdbcType=VARCHAR},
		#{memo,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 根据feedbackid查询用户的反馈回复信息 -->
	<select id="queryUserFeedbackReplyInfoByFeedbackId" resultMap="UserFeedbackReplyMap"
		parameterType="String">
		select
		<include refid="Base_UserFeedbackReply_Column_List" />
		from t_feedback_reply where f_investor_feedback_id =
		#{feedbackId,jdbcType=BIGINT}
	</select>
	<!-- *********************用户反馈回复信息 end*********************** -->
	
	<!-- *********************用户拨打电话记录信息 begin*********************** -->
	<sql id="Base_Insert_UserCallRecord_Column_List">
	    f_investor_id,
	    f_financial_planner_id,
	    f_create_time
	</sql>
	
	<!-- 保存用户拨打电话的记录信息 -->
	<insert id="saveUserCallRecord" parameterType="UserPhoneRecordDaoModel">
	    insert into t_investor_phone_record
	    (
	      <include refid="Base_Insert_UserCallRecord_Column_List"/>
	    ) 
	    values
	    (
	      #{userId,jdbcType=BIGINT},
		  #{plannerId,jdbcType=BIGINT},
		  #{createTime,jdbcType=TIMESTAMP}
	    )
	</insert>
	<!-- *********************用户拨打电话记录信息 end*********************** -->

</mapper>